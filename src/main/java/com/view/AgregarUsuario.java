/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.view;

import com.DAO.UsuarioDAO;
import com.models.Usuario;
import com.view.VistaAdministrador;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Davestriid
 */


public class AgregarUsuario extends javax.swing.JFrame {

    /**
     * Creates new form AgregarUsuario
     */
    
    private Usuario editarUsuarios = null;
    
    public AgregarUsuario() {
        initComponents();
        cargarListaDeUsuarios();
        cargarRoles();
    }
    
    
    public AgregarUsuario(Usuario usuario) {
        initComponents();
        this.editarUsuarios = usuario;

        cargarListaDeUsuarios();
        cargarRoles();

        // precargar los campos con los datos de la tarea
        if (usuario != null) {
            txtAgregarCorreoUsuario.setText(usuario.getEmail());
            txtAgregarNombreUsuario.setText(usuario.getNombre());
            txtAgregarNumeroTelefono.setText(usuario.getTelefono());
            
        }
        pwdAgregarContrasenaUsuario.setText("");  
        pwdAgregarContrasenaUsuario.setEnabled(false);
    }
    
    private List<Usuario> listaDeUsuarios;
    
    private void cargarListaDeUsuarios() {
        UsuarioDAO dao = new UsuarioDAO();
        this.listaDeUsuarios = dao.obtenerTodosLosUsuarios();

        String[] columnas = {"Id","Nombre", "Correo", "Telefono", "Rol"};
        DefaultTableModel modelo = new DefaultTableModel(null, columnas);

        for (Usuario u : listaDeUsuarios) {
            Object[] fila = {
                u.getIdUsuario(),
                u.getNombre(),
                u.getEmail(),
                u.getTelefono(),
                u.getRol(),};
            modelo.addRow(fila);
        }

        
        // para actualizar los datos de la tabla
        tablaUsuarios.setModel(modelo);
        
        //para ocultar visualmente el id
        tablaUsuarios.getColumnModel().getColumn(0).setMinWidth(0);
        tablaUsuarios.getColumnModel().getColumn(0).setMaxWidth(0);
        tablaUsuarios.getColumnModel().getColumn(0).setWidth(0);
    }
    
    
    private void cargarRoles() {
        UsuarioDAO usuarioDAO = new UsuarioDAO();
        try {
            List<String> usuarios = usuarioDAO.buscarTodosLosRoles();
            boxRol.removeAllItems();
            boxRol.addItem("Seleccionar un Rol");
            for (String u : usuarios) {
                boxRol.addItem(u); 
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al cargar categorías: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(AgregarTarea.class.getName()).log(Level.SEVERE, "Error al cargar categorías", e);
        }
    }
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        txtAgregarNombreUsuario = new javax.swing.JTextField();
        btnNuevoUsuario = new javax.swing.JButton();
        btnEditarUsuario = new javax.swing.JButton();
        btnEliminarUsuario = new javax.swing.JButton();
        atrasUsuariosBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtAgregarCorreoUsuario = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaUsuarios = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        pwdAgregarContrasenaUsuario = new javax.swing.JPasswordField();
        jLabel5 = new javax.swing.JLabel();
        txtAgregarNumeroTelefono = new javax.swing.JTextField();
        boxRol = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        btnGuardarCambiosUsuario = new javax.swing.JButton();

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Impact", 0, 24)); // NOI18N
        jLabel1.setText("USUARIOS");

        btnNuevoUsuario.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        btnNuevoUsuario.setText("NUEVO USUARIO");
        btnNuevoUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoUsuarioActionPerformed(evt);
            }
        });

        btnEditarUsuario.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        btnEditarUsuario.setText("EDITAR");
        btnEditarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarUsuarioActionPerformed(evt);
            }
        });

        btnEliminarUsuario.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        btnEliminarUsuario.setText("ELIMINAR");
        btnEliminarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarUsuarioActionPerformed(evt);
            }
        });

        atrasUsuariosBtn.setFont(new java.awt.Font("Impact", 0, 14)); // NOI18N
        atrasUsuariosBtn.setText("ATRÁS");
        atrasUsuariosBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atrasUsuariosBtnActionPerformed(evt);
            }
        });

        jLabel2.setText("Nombre");

        jLabel3.setText("Correo");

        jLabel4.setText("Contraseña");

        tablaUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaUsuarios);

        jLabel6.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        jLabel6.setText("AGREGAR NUEVO USUARIO");

        jLabel5.setText("Teléfono");

        jLabel7.setText("Rol");

        btnGuardarCambiosUsuario.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        btnGuardarCambiosUsuario.setText("GUARDAR CAMBIOS");
        btnGuardarCambiosUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarCambiosUsuarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(atrasUsuariosBtn)
                        .addGap(114, 114, 114)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(75, 75, 75)
                                .addComponent(jLabel6))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel7))
                                .addGap(42, 42, 42)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnNuevoUsuario)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtAgregarCorreoUsuario)
                                        .addComponent(txtAgregarNombreUsuario)
                                        .addComponent(pwdAgregarContrasenaUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                        .addComponent(txtAgregarNumeroTelefono)
                                        .addComponent(boxRol, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 26, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnGuardarCambiosUsuario)
                .addGap(12, 12, 12)
                .addComponent(btnEditarUsuario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEliminarUsuario)
                .addGap(85, 85, 85))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(atrasUsuariosBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel1)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEditarUsuario)
                    .addComponent(btnEliminarUsuario)
                    .addComponent(btnGuardarCambiosUsuario))
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAgregarCorreoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAgregarNombreUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(pwdAgregarContrasenaUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtAgregarNumeroTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(boxRol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addComponent(btnNuevoUsuario)
                .addGap(22, 22, 22))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void atrasUsuariosBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atrasUsuariosBtnActionPerformed
        // TODO add your handling code here:

        VistaAdministrador listar = new VistaAdministrador();
        listar.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_atrasUsuariosBtnActionPerformed

    private void btnNuevoUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoUsuarioActionPerformed
        // TODO add your handling code here:

        // 1. Obtener los datos de los campos de texto:
        String nombreUsuario = txtAgregarNombreUsuario.getText().trim();
        String correoElectronico = txtAgregarCorreoUsuario.getText().trim();
        String numeroTelefono = txtAgregarNumeroTelefono.getText().trim();
        char[] contrasenaChars = pwdAgregarContrasenaUsuario.getPassword();
        String tipoDeRol = boxRol.getSelectedItem().toString();

        // 2. Revisar si algún campo está vacío (esto es básico para que no guardes datos en blanco)
        if (nombreUsuario.isEmpty() || correoElectronico.isEmpty() || numeroTelefono.isEmpty()
                || contrasenaChars.length == 0 || tipoDeRol.equalsIgnoreCase("Seleccionar un Rol")) {
            JOptionPane.showMessageDialog(this, "Por favor, complete todos los campos y seleccione un rol válido.", "Campos Vacíos", JOptionPane.WARNING_MESSAGE);
            java.util.Arrays.fill(contrasenaChars, ' ');
            return;
        }
        String contrasenaString = new String(contrasenaChars);

        java.util.Arrays.fill(contrasenaChars, ' ');

        // 3. Crear una instancia de tu "UsuarioDAO"
        UsuarioDAO usuarioDAO = new UsuarioDAO();

        try {
            // 4. Llamar al método 'createUsuario' de tu DAO para guardar los datos
            usuarioDAO.createUsuarioAdmin(nombreUsuario, correoElectronico, numeroTelefono, tipoDeRol, contrasenaString);

            // 5. Si todo salió bien, mostrar un mensaje de éxito
            JOptionPane.showMessageDialog(this, "Usuario registrado exitosamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);

            cargarListaDeUsuarios();

        } catch (Exception e) {
            String mensajeError = "Error al registrar usuario.";
            if (e.getMessage() != null && e.getMessage().contains("ConstraintViolationException")) {
                mensajeError = "El correo electrónico ingresado ya está registrado.";
            } else {
                mensajeError += "\nDetalle: " + e.getMessage(); // Muestra el error técnico para que lo veas
            }
            JOptionPane.showMessageDialog(this, mensajeError, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnNuevoUsuarioActionPerformed

    private void btnEditarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarUsuarioActionPerformed
        // TODO add your handling code here:
        
        int filaSeleccionada = tablaUsuarios.getSelectedRow();
        if (filaSeleccionada == -1) {
            JOptionPane.showMessageDialog(this, "Por favor, selecciona un usuario para editar.");
            return;
        }

        int idUsuario = Integer.parseInt(tablaUsuarios.getValueAt(filaSeleccionada, 0).toString());

        UsuarioDAO dao = new UsuarioDAO();
        Usuario usuarioEncontrado = dao.buscarPorId(idUsuario);

        if (usuarioEncontrado != null) {
            AgregarUsuario editarUsuarioForm = new AgregarUsuario(usuarioEncontrado);
            editarUsuarioForm.setVisible(true);
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(this, "No se encontró el usuario.");
        }  
    }//GEN-LAST:event_btnEditarUsuarioActionPerformed

    private void btnEliminarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarUsuarioActionPerformed
        // TODO add your handling code here:
        int filaSeleccionada = tablaUsuarios.getSelectedRow();

        if (filaSeleccionada == -1) {
            JOptionPane.showMessageDialog(this, "Selecciona un usuario para eliminarlo.");
            return;
        }

        int confirmacion = JOptionPane.showConfirmDialog(
                this,
                "¿Estás seguro de que deseas eliminar a este usuario?",
                "Confirmar eliminación",
                JOptionPane.YES_NO_OPTION
        );

        if (confirmacion == JOptionPane.YES_OPTION) {
            // Obtener ID oculto del usuario desde la columna 0
            int idUsuario = (int) tablaUsuarios.getValueAt(filaSeleccionada, 0);

            // Eliminar de la base de datos
            UsuarioDAO dao = new UsuarioDAO();
            Usuario usuario = dao.obtenerUsuarioPorId(idUsuario);
            dao.eliminarUsuario (usuario);

            // Recargar visualmente la tabla
            cargarListaDeUsuarios();

            JOptionPane.showMessageDialog(this, "Usuario eliminado correctamente.");
        }
    }//GEN-LAST:event_btnEliminarUsuarioActionPerformed

    private void btnGuardarCambiosUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarCambiosUsuarioActionPerformed
        // TODO add your handling code here:
        
        try {
    String correo = txtAgregarCorreoUsuario.getText().trim();
            String nombre = txtAgregarNombreUsuario.getText().trim();
            String telefono = txtAgregarNumeroTelefono.getText().trim();
            String contrasena = new String(pwdAgregarContrasenaUsuario.getPassword()).trim();
            String rol = (String) boxRol.getSelectedItem();

            if (correo.isEmpty() || nombre.isEmpty() || telefono.isEmpty()
                    || rol == null || rol.trim().equalsIgnoreCase("Seleccionar un Rol")
                    || (editarUsuarios == null && contrasena.isEmpty())) {
                JOptionPane.showMessageDialog(this, "Por favor completa todos los campos obligatorios.");
                return;
            }

            UsuarioDAO usuarioDAO = new UsuarioDAO();

            if (editarUsuarios != null) {
                
                // EDITAR usuario existente
                editarUsuarios.setEmail(correo);
                editarUsuarios.setNombre(nombre);
                editarUsuarios.setTelefono(telefono);
                editarUsuarios.setRol(rol);

                // Actualiza la contraseña sólo si el usuario ingresó una nueva
                if (!contrasena.isEmpty()) {
                    editarUsuarios.setContrasena(contrasena);
                }

                usuarioDAO.actualizarUsuario(editarUsuarios);
                JOptionPane.showMessageDialog(this, "Usuario actualizado exitosamente.");
            } else {
                // CREAR usuario nuevo (contraseña obligatoria)
                usuarioDAO.createUsuarioAdmin(nombre, correo, telefono, rol, contrasena);
                JOptionPane.showMessageDialog(this, "Usuario creado exitosamente.");
            }
            cargarListaDeUsuarios();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al guardar/actualizar usuario: " + e.getMessage());
            e.printStackTrace();
        }

    }//GEN-LAST:event_btnGuardarCambiosUsuarioActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
                javax.swing.UIManager.setLookAndFeel(info.getClassName());
                break;
            }
        }
    } catch (ClassNotFoundException ex) {
        java.util.logging.Logger.getLogger(AgregarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
        java.util.logging.Logger.getLogger(AgregarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
        java.util.logging.Logger.getLogger(AgregarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
        java.util.logging.Logger.getLogger(AgregarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
        public void run() {
            new AgregarUsuario().setVisible(true);
        }
    });
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton atrasUsuariosBtn;
    private javax.swing.JComboBox<String> boxRol;
    private javax.swing.JButton btnEditarUsuario;
    private javax.swing.JButton btnEliminarUsuario;
    private javax.swing.JButton btnGuardarCambiosUsuario;
    private javax.swing.JButton btnNuevoUsuario;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPasswordField pwdAgregarContrasenaUsuario;
    private javax.swing.JTable tablaUsuarios;
    private javax.swing.JTextField txtAgregarCorreoUsuario;
    private javax.swing.JTextField txtAgregarNombreUsuario;
    private javax.swing.JTextField txtAgregarNumeroTelefono;
    // End of variables declaration//GEN-END:variables
}
