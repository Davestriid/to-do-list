/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.view;

import com.DAO.CategoriaDAO;
import com.models.Categoria;
import com.models.Tarea;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Davestriid
 */
public class AgregarCategoria extends javax.swing.JFrame {

    /**
     * Creates new form AgregarCategoria
     */
    public AgregarCategoria() {
        initComponents();
        cargarListaDeCategorias();
    }

    private Categoria categoriaEditada;

    public AgregarCategoria(Categoria categoria) {
        initComponents();
        this.categoriaEditada = categoria;
        txtNuevaCategoria.setText(categoria.getNombreCategoria());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    private List<Categoria> listaDeCategorias;
        private void cargarListaDeCategorias() {
        CategoriaDAO dao = new CategoriaDAO();
        this.listaDeCategorias = dao.obtenerTodasLasCategorias(); 

        String[] columnas = {"ID","Categoría"};
        DefaultTableModel modelo = new DefaultTableModel(null, columnas);

        for (Categoria c : listaDeCategorias) {
            Object[] fila = {
                c.getIdCategoria(),
                c.getNombreCategoria(),
            };
            modelo.addRow(fila);
        }
        
        // para actualizar los datos de la tabla
        tablaCategorias.setModel(modelo);
        
        //para ocultar visualmente el id
        tablaCategorias.getColumnModel().getColumn(0).setMinWidth(0);
        tablaCategorias.getColumnModel().getColumn(0).setMaxWidth(0);
        tablaCategorias.getColumnModel().getColumn(0).setWidth(0);
    }
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        atrasCategoriaBtn = new javax.swing.JButton();
        txtNuevaCategoria = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnGuardarCambiosCategorias = new javax.swing.JButton();
        btnEditarCategoria = new javax.swing.JButton();
        btnEliminarCategoria = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaCategorias = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        btnAgregarNuevaCategoria = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Impact", 0, 24)); // NOI18N
        jLabel1.setText("CATEGORÍAS");

        atrasCategoriaBtn.setFont(new java.awt.Font("Impact", 0, 14)); // NOI18N
        atrasCategoriaBtn.setText("ATRÁS");
        atrasCategoriaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atrasCategoriaBtnActionPerformed(evt);
            }
        });

        jLabel3.setText("Nueva Categoría");

        btnGuardarCambiosCategorias.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        btnGuardarCambiosCategorias.setText("GUARGDAR CAMBIOS");
        btnGuardarCambiosCategorias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarCambiosCategoriasActionPerformed(evt);
            }
        });

        btnEditarCategoria.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        btnEditarCategoria.setText("EDITAR");
        btnEditarCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarCategoriaActionPerformed(evt);
            }
        });

        btnEliminarCategoria.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        btnEliminarCategoria.setText("ELIMINAR");
        btnEliminarCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarCategoriaActionPerformed(evt);
            }
        });

        tablaCategorias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaCategorias);

        jLabel4.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        jLabel4.setText("NUEVA CATEGORÍA");

        btnAgregarNuevaCategoria.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        btnAgregarNuevaCategoria.setText("AGREGAR CATEGORÍA");
        btnAgregarNuevaCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarNuevaCategoriaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnGuardarCambiosCategorias)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEditarCategoria)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEliminarCategoria))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(atrasCategoriaBtn)
                            .addGap(61, 61, 61)
                            .addComponent(jLabel1))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(22, 22, 22)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(117, 117, 117)
                            .addComponent(btnAgregarNuevaCategoria))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(55, 55, 55)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addGap(27, 27, 27)
                                    .addComponent(txtNuevaCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(90, 90, 90)
                                    .addComponent(jLabel4))))))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(atrasCategoriaBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardarCambiosCategorias)
                    .addComponent(btnEditarCategoria)
                    .addComponent(btnEliminarCategoria))
                .addGap(29, 29, 29)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNuevaCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addComponent(btnAgregarNuevaCategoria)
                .addContainerGap(47, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void atrasCategoriaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atrasCategoriaBtnActionPerformed
        // TODO add your handling code here:
        
        VistaAdministrador listar = new VistaAdministrador(); 
        listar.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_atrasCategoriaBtnActionPerformed

    private void btnGuardarCambiosCategoriasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarCambiosCategoriasActionPerformed
        // TODO add your handling code here:

        if (categoriaEditada == null) {
            JOptionPane.showMessageDialog(this, "No hay ninguna categoría en edición.");
            return;
        }

        String nuevoNombre = txtNuevaCategoria.getText().trim();
        if (nuevoNombre.isEmpty()) {
            JOptionPane.showMessageDialog(this, "El nombre no puede estar vacío.");
            return;
        }

        categoriaEditada.setNombreCategoria(nuevoNombre);

        CategoriaDAO dao = new CategoriaDAO();
        try {
            dao.actualizarCategoria(categoriaEditada);
            JOptionPane.showMessageDialog(this, "Categoría actualizada correctamente.");
            new AgregarCategoria().setVisible(true);
            this.dispose();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al actualizar la categoría:\n" + e.getMessage());
        }

    }//GEN-LAST:event_btnGuardarCambiosCategoriasActionPerformed

    private void btnAgregarNuevaCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarNuevaCategoriaActionPerformed
        // TODO add your handling code here:
        
        String nombreCategoria = txtNuevaCategoria.getText().trim();
       

        if (nombreCategoria.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, complete todos los campos", "Campos Vacíos", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        CategoriaDAO usuarioDAO = new CategoriaDAO();

        try {
            usuarioDAO.createCategoria(nombreCategoria);

            JOptionPane.showMessageDialog(this, "Categoria registrada exitosamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);

            txtNuevaCategoria.setText("");
            cargarListaDeCategorias();

        } catch (Exception e) {
            String mensajeError = "Error al crear categoria.";
            if (e.getMessage() != null && e.getMessage().contains("ConstraintViolationException")) {
            } else {
                mensajeError += "\nDetalle: " + e.getMessage(); // Muestra el error técnico para que lo veas
            }
            JOptionPane.showMessageDialog(this, mensajeError, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAgregarNuevaCategoriaActionPerformed

    private void btnEliminarCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarCategoriaActionPerformed
        // TODO add your handling code here:
        int filaSeleccionada = tablaCategorias.getSelectedRow();

        if (filaSeleccionada == -1) {
            JOptionPane.showMessageDialog(this, "Selecciona una categoria para eliminarla.");
            return;
        }

        int confirmacion = JOptionPane.showConfirmDialog(
                this,
                "¿Estás seguro de que deseas eliminar a esta categoria?",
                "Confirmar eliminación",
                JOptionPane.YES_NO_OPTION
        );

        if (confirmacion == JOptionPane.YES_OPTION) {
            // Obtener ID oculto del usuario desde la columna 0
            int idUsuario = (int) tablaCategorias.getValueAt(filaSeleccionada, 0);

            // Eliminar de la base de datos
            CategoriaDAO dao = new CategoriaDAO();
            Categoria categoria = dao.obtenerCategoriaPorId(idUsuario);
            dao.eliminarCategoria (categoria);

            // Recargar visualmente la tabla
            cargarListaDeCategorias();

            JOptionPane.showMessageDialog(this, "Usuario eliminado correctamente.");
        }
    }//GEN-LAST:event_btnEliminarCategoriaActionPerformed

    private void btnEditarCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarCategoriaActionPerformed
        // TODO add your handling code here:
        int filaSeleccionada = tablaCategorias.getSelectedRow();
        if (filaSeleccionada == -1) {
            JOptionPane.showMessageDialog(this, "Por favor, selecciona una categoría para editar.");
            return;
        }

        int idCategoria = Integer.parseInt(tablaCategorias.getValueAt(filaSeleccionada, 0).toString());

        CategoriaDAO dao = new CategoriaDAO();
        Categoria categoriaEncontrada = dao.obtenerCategoriaPorId(idCategoria); // ← usa el método correcto

        if (categoriaEncontrada != null) {
            AgregarCategoria editarCategoriaForm = new AgregarCategoria(categoriaEncontrada);
            editarCategoriaForm.setVisible(true);
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(this, "No se encontró la categoría.");
        }

    }//GEN-LAST:event_btnEditarCategoriaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AgregarCategoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AgregarCategoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AgregarCategoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AgregarCategoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AgregarCategoria().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton atrasCategoriaBtn;
    private javax.swing.JButton btnAgregarNuevaCategoria;
    private javax.swing.JButton btnEditarCategoria;
    private javax.swing.JButton btnEliminarCategoria;
    private javax.swing.JButton btnGuardarCambiosCategorias;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaCategorias;
    private javax.swing.JTextField txtNuevaCategoria;
    // End of variables declaration//GEN-END:variables
}
